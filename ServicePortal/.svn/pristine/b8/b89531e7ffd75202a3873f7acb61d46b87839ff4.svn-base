import { Component, OnInit ,Input} from '@angular/core';
import { NsoService } from '../nso.service';
import { Router } from '@angular/router';
import { Http } from '@angular/http';
import { Subject } from 'rxjs/Subject';
import { DialogService } from "ng2-bootstrap-modal";
import { DomSanitizer } from '@angular/platform-browser';
import {NgxSmartModalService} from 'ngx-smart-modal';
import 'rxjs/add/operator/map';
import * as $ from 'jquery';

@Component({
  selector: 'app-bandwidth-on-demand',
  templateUrl: './bandwidth-on-demand.component.html',
  styleUrls: ['./bandwidth-on-demand.component.scss']
})
export class BandwidthOnDemandComponent implements OnInit {
  @Input() bTabData
	uList;
	dtOptions: DataTables.Settings = {};
	serviceData: string;
  dtTrigger: Subject<any> = new Subject();
  toggleButton: boolean=true;
  btnDisabled:boolean = true;
  values:string;
  list2;
  hList1;
  uList1;

  title;
  constructor(private router: Router,private nsoService: NsoService, private http: Http,private dialogService:DialogService,
    public ngxSmartModalService: NgxSmartModalService) { 

    this.nsoService.nsoServices().subscribe(data => {
      console.log(data);

      if (data.result) {
        this.uList = Object.keys(data.result.service_points);
      } else {
        this.router.navigate(['']);
      }
    });

  }

  ngOnInit() {
  }
  changeEvent(event) {

    if (event.target.checked) {

      console.log('hello'+event.target.checked)
      this.toggleButton= !this.toggleButton;

    }
    else {
      this.toggleButton= true;
    }
  }
  resetAll(event)
  {
    this.btnDisabled = true;
    this.values = "";
    $("#checkbox").prop("checked", false);
    //  $('#Btxt').val("New value");

    this.toggleButton= true;



    
  }
  clr(event)
  {
    $('#Btxt').val('');

    //document.getElementsByName('elementid').value = "";
  }





  openPrice(val)
  {
    
    this.btnDisabled = false;
    this.title="Price Tab";
    var   num1= ((document.getElementById("Btxt") as HTMLInputElement).value);
    console.log("txtValue"+num1);
    
    val['value']=num1;
    this.ngxSmartModalService.setModalData(val, 'priceModal');
    this.ngxSmartModalService.getModal('priceModal').open();


  }
  eventHandler(e){

    this.btnDisabled = false;
  }
  refreshFunc() {
    location.reload();
  }
  UpdateBandwidth(val)
  {
    

    let path=""+val.serviceName+"{"+val.ckt_id+"}/ml2:bandwidth";
    const URL = {
      'URL': (path),
      'Value':val.value
    }


    this.nsoService.nsoServicesSchemaSetValue(URL).subscribe(data => {
      console.log("set value==========================");
      console.log(data);
      console.log("set value==========================");

    });



  }
  l3vpnshow(cktId_Val,bndWidth_Val,serviceName) {
     console.log("cktId_Val"+cktId_Val);
     console.log("Value_bandwidth"+  bndWidth_Val);
       
console.log("Value of btadate"+serviceName);
        let data={
  'ckt_id':cktId_Val,
  'serviceName':serviceName,
  'bandwidth':bndWidth_Val
}
 this.ngxSmartModalService.setModalData(data, 'classicModal1');
     
           this.ngxSmartModalService.getModal('classicModal1').open();
      }
}
