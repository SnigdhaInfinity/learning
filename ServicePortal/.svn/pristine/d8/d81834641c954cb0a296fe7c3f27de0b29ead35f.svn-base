import { Component, OnInit,ViewChild, ElementRef,NgZone,} from '@angular/core';
import { Router } from '@angular/router';
import { NsoService } from '../nso.service';
import {MapsAPILoader} from '@agm/core';
import {} from '@types/googlemaps';
declare var $ : any
@Component({
  selector: 'app-header',
  templateUrl: './header.component.html',
  styleUrls: ['./header.component.scss'] 
})
export class HeaderComponent implements OnInit {
locationT:boolean = false;
loginUser;
loginEmail;
 latlng:any;
@ViewChild('search') public searchElement:ElementRef;
	constructor(private elementRef:ElementRef , 
    private router: Router, private nsoService: NsoService,
    private mapsAPILoader:MapsAPILoader,private ngZone:NgZone) { 

 

  }
 
  ngOnInit() {
this.loginUser=localStorage.getItem("loginUser");
this.loginEmail=localStorage.getItem("loginEmail");
//Start
  	this.mapsAPILoader.load().then(
  		() => {

  			let autocomplete = new google.maps.places.Autocomplete(this.searchElement.nativeElement,{types:["address"]});

  			autocomplete.addListener("place_changed",() => {

  				this.ngZone.run(() => {


  					let place:google.maps.places.PlaceResult=autocomplete.getPlace();
  					if(place.geometry === undefined || place.geometry === null )
  					{
  						return;
  					}
  				});
  			});
  		});

 
  	 
  }

	logout() {
		this.nsoService.nsoLogout().subscribe(data => {
			console.log(data);
			if (data) {
        localStorage.removeItem("loginUser");
        localStorage.removeItem("loginEmail");
        localStorage.clear();
				this.router.navigate(['']);
			} else {

			}

		});
	}
	locationBox(_ev){
 _ev.stopPropagation();
		this.locationT = !this.locationT;
	}

closeDiv(e)
{
  
  this.locationT = false;
}	 

}

